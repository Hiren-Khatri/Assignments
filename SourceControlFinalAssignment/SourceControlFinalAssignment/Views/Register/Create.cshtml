@model SourceControlFinalAssignment.Models.UserView

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Register</h2>


@using (Html.BeginForm("Create", "Register", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />

        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserPhone, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.UserPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserPhone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReType, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.ReType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserBirthDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.UserBirthDate, new { htmlAttributes = new { @class = "form-control", @Id = "birthDateInput" } })
                        @Html.ValidationMessageFor(model => model.UserBirthDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.UserImage, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.TextBoxFor(model => model.UserImage, new { @class = "form-control", @type = "file", @name = "UserImage", @Id = "fileUpload", @accept = "image/x-png,image/jpg,image/jpeg", @onChange = "ShowImagePreview(this,document.getElementById('imagePreview'))" })
                        @Html.ValidationMessageFor(model => model.UserImage, "", new { @class = "text-danger" })
                        <span id="lblError" class="text-danger"></span>
                        <img style="margin:10px; height:200px; width: 200px;border:2px solid #337ab7;border-radius:8px" id="imagePreview" hidden />
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-4 col-md-7">
                    <input type="submit" value="Register" class="btn btn-primary btn-lg" id="btnUpload" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
